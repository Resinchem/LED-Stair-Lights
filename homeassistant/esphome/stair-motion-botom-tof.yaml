esphome:
  name: stair-motion-bottom-tof
esp8266:
  board: d1_mini

wifi:
  ssid: "your_wifi_name"
  password: "your_wifi_password"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "StairMotionBottom_TOF"
    password: "optional"  # Change, or leave blank for no password

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: "optional"  # Change, or leave blank or remove line for no password

ota:
  password: "optional"  # Change, or leave blank or remove line for no password

# ======================================================================
#  This section should be added to any auto-generated code created above
# ======================================================================
# the vl53l0x is i2c
i2c:
  scan: true

##
## The virutal break beam sensor.
## The state of this will be controlled 
## by breakbeam_sensor_dist's lambda as necessary.
##
binary_sensor:
  - name: "Stair Motion Bottom"
    id: breakbeam_sensor_bottom
    platform: template
    device_class: motion

##
## The actual sensor. 
## This sensor's lambda will control the state of our 
## virtual break beam sensor, breakbeam_sensor.
##
sensor:
  - name: "Stair Bottom Sensor Dist"
    id: breakbeam_sensor_bottom_dist
    platform: vl53l0x
    address: 0x29
    update_interval: 0.1s
    long_range: true
    internal: true
    #
    # Only send a value back if breakbeam_sensor changes.
    #
    filters:
      - lambda: !lambda |-
          /**
           * YOU MIGHT WANT TO CONFIGURE THIS.
           * Distance below which to trip the virtual break beam sensor.
           * '0.5' meters is about 20  inches.
           */
          static double minTripDistance = 0.7;
          if (x <= minTripDistance) {
            if (id(breakbeam_sensor_bottom).state == true) {
              // Beam was already broken
              return {};
            }
            // Beam was just broken
            id(breakbeam_sensor_bottom).publish_state(true);
            ESP_LOGI("breakbeam_sensor_bottom_dist", "Set breakbeam_sensor_bottom to Detected");
            return {};
          }
          else {
            if (id(breakbeam_sensor_bottom).state == false) {
              // Beam was already un-broken
              return {};
            }
            // Beam was just un-broken
            id(breakbeam_sensor_bottom).publish_state(false);
            ESP_LOGI("breakbeam_sensor_bottom_dist", "Set breakbeam_sensor_bottom to Cleared");
            return {};
          } 

switch:
  - platform: restart
    name: "Stair Motion Bottom Restart"
